!function(t){var e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(o,i,function(e){return t[e]}.bind(null,i));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=691)}({61:function(t,e){function n(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var o=function(){function t(e,n,o,i,r,a,l){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);this.field=e,this.id=o,this.uuid=n,this.func=a,this.type=l,this.references=[],this.funcDownloadRoute=i,this.funcDeleteRoute=r,$("#"+e).on("blur",this._selector.attachmentDropZone),$("#"+e).on("click",this._selector.delete,this._deleteFile.bind(this))}return function(t,e,o){e&&n(t.prototype,e),o&&n(t,o)}(t,[{key:"_deleteFile",value:function(t){var e=this,n={delete:t.currentTarget},o=$(n.delete),i=$(t.currentTarget).closest(".list-group-item");swal({title:"確定要刪除該筆資料嗎？",showCancelButton:!0,cancelButtonClass:"btn btn-danger",confirmButtonClass:"btn btn-primary save",buttonsStyling:!1}).then(function(t){t.value&&$.ajax({url:Routing.generate(e.funcDeleteRoute,{id:i.attr("data-id"),fieldName:e.field}),method:"Delete",success:function(t){swal({title:"該筆資料已刪除",confirmButtonClass:"btn btn-primary save",buttonsStyling:!1}),e._deleteRow(o)},error:function(){}})})}},{key:"_deleteRow",value:function(t){t.closest("p").remove()}},{key:"showMul",value:function(t){for(var e=0;e<t.length;e++){var n=t[e].originalName,o=this.type,i="";"new"!=o&&"edit"!=o&&(i="disabled");var r='\n                       <p class="list-group-item d-flex justify-content-between align-items-center lichnage" style="background-color: unset;border: unset" data-id="'.concat(t[e].id,'">\n                          <label  style="width: auto;">').concat(n,'</label>\n                           <span><a target="_blank" href="').concat(Routing.generate(this.funcDownloadRoute,{id:t[e].id}),'" class="btn btn-link btn-sm" style="vertical-align: middle">\n                           <span class="fa fa-download"></span></a>\n                           <button class="js-delete btn btn-link btn-sm" ')+i+' type="button">\n                               <span class="fa fa-trash-o"></span>\n                           </button>\n                           </span></p>\n           ';$("#"+this.field).find(this._selector.mainAttachmentList).prepend(r)}}},{key:"ID",get:function(){return this.id}},{key:"_selector",get:function(){return{mainList:"ul.js-attachment-list",filename:"label.js-attachment",download:"button#js-download",delete:"button.js-delete",save:"button#save",mainAttachmentList:"ul.js-attachment-list"}}}]),t}();window.UploadFile=o},691:function(t,e,n){"use strict";n.r(e);n(61);function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function i(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function r(t,e){return!e||"object"!==o(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function a(t){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}Dropzone.autoDiscover=!1;var u=function(t){function e(t,n,o,i,l,u,s){var c;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(c=r(this,a(e).call(this,t,n,o,i,l,u,s))).initialDropZone(),c.refreshData(),c}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(e,UploadFile),function(t,e,n){e&&i(t.prototype,e),n&&i(t,n)}(e,[{key:"initialDropZone",value:function(){var t=this;new Dropzone("#"+t.field+" div.js-attachment-dropzone",{url:Routing.generate("upload_multipleFiles",{uuid:t.uuid,fieldName:t.field,func:t.func}),paramName:"file",uploadMultiple:!0,dictInvalidFileType:"檔案格式不符！",dictFileTooBig:"檔案容量超出限制！",dictResponseError:"回應錯誤！",acceptedFiles:["image/*","application/pdf","application/msword","application/vnd.ms-excel","docm","dotm","xlam","xlsb","xlsm","xltm","odt","ods","txt","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.spreadsheet","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/octet-stream","application/vnd.oasis.opendocument.formula","application/x-zip-compressed","application/zip","text/plain"].join(","),init:function(){this.on("success",function(t,e){$(".dz-success-mark svg").css("background","#30991b").css("opacity",.5),setTimeout(function(t){this.removeFile(t)}.bind(this,t),1e3)}),this.on("successmultiple",function(e,n){t.showMul(n)}),this.on("error",function(t,e){$(".dz-error-mark svg g g").css("fill","#c00").css("opacity",.5),setTimeout(function(t){this.removeFile(t)}.bind(this,t),3e3)})}})}},{key:"refreshData",value:function(){var t=this;$.ajax({url:Routing.generate("refresh_all_files",{uuid:t.uuid,fieldName:t.field}),method:"POST",datatype:"json",contentType:"application/json",success:function(e){t.showMul(e)},error:function(){}})}}]),e}();window.UploadMultiple=u}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,