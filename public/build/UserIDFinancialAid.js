!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=693)}({14:function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},693:function(t,e,n){(function(t){function e(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var n=t.jQuery,r=function(){function t(e,r,i,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var a=this;this.button=e,this.userID=r,this.functionName=i,this.caseOrgID=o,n(e).click(function(){a._userAidList(this)})}return function(t,n,r){n&&e(t.prototype,n),r&&e(t,r)}(t,[{key:"_userAidList",value:function(t){var e=this,r=n(this._selector.userIDField).val();n("#financialAidList tr").remove(),""!=n.trim(r)&&n.ajax({url:Routing.generate("FinancialAid_list",{userID:r}),method:"POST",datatype:"json",contentType:"application/json",success:function(t){if(0===t.length){n(e._selector.userIDList).append('\n                            <tr>\n                                <td class="text-center red" colspan="6">查無資料</td>\n                            </tr>\n                        ')}else n.each(t,function(t,n){e._appendList(n)})},error:function(){n(e._selector.userIDList).append('\n                            <tr>\n                                <td class="text-center red" colspan="6">請重新整理</td>\n                            </tr>\n                        ')}})}},{key:"_appendList",value:function(t){var e=this.caseOrgID,r="";t.orgID!=e&&(r="label-pink");var i='\n            <tr>\n                <td class="text-center '+r+'">'+t.orgName+'</td>\n                <td class="text-center '+r+'">'+t.createdUserName+'</td>\n                <td class="text-center '+r+'">'+t.applyDate+'</td>\n                <td class="text-center '+r+'">'+t.name+'</td>\n                <td class="text-right '+r+'">'+t.amount+'</td>\n                <td class="text-center '+r+'">'+t.issueDate+"</td>\n            </tr>\n        ";n(this._selector.userIDList).append(i)}},{key:"_selector",get:function(){return{userIDList:"#financialAidList",userIDField:"#"+this.functionName+"_form_userID"}}}]),t}();window.UserIDFinancialAid=r}).call(this,n(14))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,