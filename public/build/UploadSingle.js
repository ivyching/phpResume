!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=690)}({61:function(e,t){function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var o=function(){function e(t,n,o,i,r,a,l){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);this.field=t,this.id=o,this.uuid=n,this.func=a,this.type=l,this.references=[],this.funcDownloadRoute=i,this.funcDeleteRoute=r,$("#"+t).on("blur",this._selector.attachmentDropZone),$("#"+t).on("click",this._selector.delete,this._deleteFile.bind(this))}return function(e,t,o){t&&n(e.prototype,t),o&&n(e,o)}(e,[{key:"_deleteFile",value:function(e){var t=this,n={delete:e.currentTarget},o=$(n.delete),i=$(e.currentTarget).closest(".list-group-item");swal({title:"確定要刪除該筆資料嗎？",showCancelButton:!0,cancelButtonClass:"btn btn-danger",confirmButtonClass:"btn btn-primary save",buttonsStyling:!1}).then(function(e){e.value&&$.ajax({url:Routing.generate(t.funcDeleteRoute,{id:i.attr("data-id"),fieldName:t.field}),method:"Delete",success:function(e){swal({title:"該筆資料已刪除",confirmButtonClass:"btn btn-primary save",buttonsStyling:!1}),t._deleteRow(o)},error:function(){}})})}},{key:"_deleteRow",value:function(e){e.closest("p").remove()}},{key:"showMul",value:function(e){for(var t=0;t<e.length;t++){var n=e[t].originalName,o=this.type,i="";"new"!=o&&"edit"!=o&&(i="disabled");var r='\n                       <p class="list-group-item d-flex justify-content-between align-items-center lichnage" style="background-color: unset;border: unset" data-id="'.concat(e[t].id,'">\n                          <label  style="width: auto;">').concat(n,'</label>\n                           <span><a target="_blank" href="').concat(Routing.generate(this.funcDownloadRoute,{id:e[t].id}),'" class="btn btn-link btn-sm" style="vertical-align: middle">\n                           <span class="fa fa-download"></span></a>\n                           <button class="js-delete btn btn-link btn-sm" ')+i+' type="button">\n                               <span class="fa fa-trash-o"></span>\n                           </button>\n                           </span></p>\n           ';$("#"+this.field).find(this._selector.mainAttachmentList).prepend(r)}}},{key:"ID",get:function(){return this.id}},{key:"_selector",get:function(){return{mainList:"ul.js-attachment-list",filename:"label.js-attachment",download:"button#js-download",delete:"button.js-delete",save:"button#save",mainAttachmentList:"ul.js-attachment-list"}}}]),e}();window.UploadFile=o},690:function(e,t,n){"use strict";n.r(t);n(61);function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function r(e,t){return!t||"object"!==o(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function a(e){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}Dropzone.autoDiscover=!1;var s=function(e){function t(e,n,o,i,l,s,c){var u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(u=r(this,a(t).call(this,e,n,o,i,l,s,c))).initialDropZone(),u.refreshData(),u}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,UploadFile),function(e,t,n){t&&i(e.prototype,t),n&&i(e,n)}(t,[{key:"initialDropZone",value:function(){var e=this,t=$("#"+e.field).find(e._selector.mainAttachmentList);new Dropzone("#"+e.field+" div.js-attachment-dropzone",{url:Routing.generate("upload_multipleFile",{uuid:e.uuid,fieldName:e.field,func:e.func}),paramName:"file",dictInvalidFileType:"檔案格式不符！",dictFileTooBig:"檔案容量超出限制！",dictResponseError:"回應錯誤！",acceptedFiles:["image/*","application/pdf","application/msword","application/vnd.ms-excel","docm","dotm","xlam","xlsb","xlsm","xltm","odt","ods","txt","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.spreadsheet","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/octet-stream","application/vnd.oasis.opendocument.formula","application/x-zip-compressed","application/zip","text/plain"].join(","),maxFiles:1,init:function(){this.on("success",function(n,o){$(".dz-success-mark svg").css("background","#30991b").css("opacity",.5),e.showMul(o),e.deleteRow(t),e.refreshData(o),setTimeout(function(e){this.removeFile(e)}.bind(this,n),1e3)}),this.on("maxfilesexceeded",function(e,t){swal({title:"此欄位僅限上傳一個檔案",confirmButtonClass:"btn btn-primary save",buttonsStyling:!1})}),this.on("error",function(e,t){$(".dz-error-mark svg g g").css("fill","#c00").css("opacity",.5),setTimeout(function(e){this.removeFile(e)}.bind(this,e),3e3)})}})}},{key:"refreshData",value:function(){var e=this;$.ajax({url:Routing.generate("refresh_file",{uuid:e.uuid,fieldName:e.field}),method:"POST",datatype:"json",contentType:"application/json",success:function(t){e.showMul(t)},error:function(){}})}},{key:"deleteRow",value:function(e){e.children("p").remove()}}]),t}();window.UploadSingle=s}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,