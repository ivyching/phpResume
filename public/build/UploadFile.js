!function(t){var e={};function n(o){if(e[o])return e[o].exports;var a=e[o]={i:o,l:!1,exports:{}};return t[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(o,a,function(e){return t[e]}.bind(null,a));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=61)}({61:function(t,e){function n(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var o=function(){function t(e,n,o,a,i,l,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);this.field=e,this.id=o,this.uuid=n,this.func=l,this.type=r,this.references=[],this.funcDownloadRoute=a,this.funcDeleteRoute=i,$("#"+e).on("blur",this._selector.attachmentDropZone),$("#"+e).on("click",this._selector.delete,this._deleteFile.bind(this))}return function(t,e,o){e&&n(t.prototype,e),o&&n(t,o)}(t,[{key:"_deleteFile",value:function(t){var e=this,n={delete:t.currentTarget},o=$(n.delete),a=$(t.currentTarget).closest(".list-group-item");swal({title:"確定要刪除該筆資料嗎？",showCancelButton:!0,cancelButtonClass:"btn btn-danger",confirmButtonClass:"btn btn-primary save",buttonsStyling:!1}).then(function(t){t.value&&$.ajax({url:Routing.generate(e.funcDeleteRoute,{id:a.attr("data-id"),fieldName:e.field}),method:"Delete",success:function(t){swal({title:"該筆資料已刪除",confirmButtonClass:"btn btn-primary save",buttonsStyling:!1}),e._deleteRow(o)},error:function(){}})})}},{key:"_deleteRow",value:function(t){t.closest("p").remove()}},{key:"showMul",value:function(t){for(var e=0;e<t.length;e++){var n=t[e].originalName,o=this.type,a="";"new"!=o&&"edit"!=o&&(a="disabled");var i='\n                       <p class="list-group-item d-flex justify-content-between align-items-center lichnage" style="background-color: unset;border: unset" data-id="'.concat(t[e].id,'">\n                          <label  style="width: auto;">').concat(n,'</label>\n                           <span><a target="_blank" href="').concat(Routing.generate(this.funcDownloadRoute,{id:t[e].id}),'" class="btn btn-link btn-sm" style="vertical-align: middle">\n                           <span class="fa fa-download"></span></a>\n                           <button class="js-delete btn btn-link btn-sm" ')+a+' type="button">\n                               <span class="fa fa-trash-o"></span>\n                           </button>\n                           </span></p>\n           ';$("#"+this.field).find(this._selector.mainAttachmentList).prepend(i)}}},{key:"ID",get:function(){return this.id}},{key:"_selector",get:function(){return{mainList:"ul.js-attachment-list",filename:"label.js-attachment",download:"button#js-download",delete:"button.js-delete",save:"button#save",mainAttachmentList:"ul.js-attachment-list"}}}]),t}();window.UploadFile=o}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,